{"ast":null,"code":"import _slicedToArray from\"/home/ondaniel/santiago/sisgie/new_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useCallback,useState,useContext}from'react';var AsideContext=createContext({});export var AsideProvider=function AsideProvider(_ref){var children=_ref.children;var _useState=useState(window.innerWidth>=900),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var toggle=useCallback(function(){setShow(!show);},[show]);return/*#__PURE__*/React.createElement(AsideContext.Provider,{value:{show:show,toggle:toggle}},children);};export var useAside=function useAside(){var context=useContext(AsideContext);if(!context){throw new Error('useAside must be used within an AsideContext Provider');}return context;};","map":{"version":3,"sources":["/home/ondaniel/santiago/sisgie/new_frontend/src/hooks/aside.tsx"],"names":["React","createContext","useCallback","useState","useContext","AsideContext","AsideProvider","children","window","innerWidth","show","setShow","toggle","useAside","context","Error"],"mappings":"8HAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,WAA/B,CAA4CC,QAA5C,CAAsDC,UAAtD,KAAwE,OAAxE,CAOA,GAAMC,CAAAA,YAAY,CAAGJ,aAAa,CAAmB,EAAnB,CAAlC,CAEA,MAAO,IAAMK,CAAAA,aAAuB,CAAG,QAA1BA,CAAAA,aAA0B,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eAC/BJ,QAAQ,CAACK,MAAM,CAACC,UAAP,EAAqB,GAAtB,CADuB,wCAChDC,IADgD,eAC1CC,OAD0C,eAGvD,GAAMC,CAAAA,MAAM,CAAGV,WAAW,CAAC,UAAM,CAC/BS,OAAO,CAAC,CAACD,IAAF,CAAP,CACD,CAFyB,CAEvB,CAACA,IAAD,CAFuB,CAA1B,CAIA,mBACE,oBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEA,IAAI,CAAJA,IAAF,CAAQE,MAAM,CAANA,MAAR,CAA9B,EACGL,QADH,CADF,CAKD,CAZM,CAcP,MAAO,IAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAwB,CAC9C,GAAMC,CAAAA,OAAO,CAAGV,UAAU,CAACC,YAAD,CAA1B,CAEA,GAAI,CAACS,OAAL,CAAc,CACZ,KAAM,IAAIC,CAAAA,KAAJ,CAAU,uDAAV,CAAN,CACD,CAED,MAAOD,CAAAA,OAAP,CACD,CARM","sourcesContent":["import React, { createContext, useCallback, useState, useContext } from 'react';\n\ninterface AsideContextData {\n  show: boolean;\n  toggle(): void;\n}\n\nconst AsideContext = createContext<AsideContextData>({} as AsideContextData);\n\nexport const AsideProvider: React.FC = ({ children }) => {\n  const [show, setShow] = useState(window.innerWidth >= 900);\n\n  const toggle = useCallback(() => {\n    setShow(!show);\n  }, [show]);\n\n  return (\n    <AsideContext.Provider value={{ show, toggle }}>\n      {children}\n    </AsideContext.Provider>\n  );\n};\n\nexport const useAside = (): AsideContextData => {\n  const context = useContext(AsideContext);\n\n  if (!context) {\n    throw new Error('useAside must be used within an AsideContext Provider');\n  }\n\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}