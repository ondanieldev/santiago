{"ast":null,"code":"var _jsxFileName = \"/home/ondaniel/santiago/sisgie-frontend/src/pages/GenerateDocumentsByContract/index.tsx\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form } from '@unform/web';\nimport { FiCheck } from 'react-icons/fi';\nimport { toast } from 'react-toastify';\nimport { Container, Main, InputGroup, WarnMessage, Payment } from './styles';\nimport Loading from '../../components/Loading';\nimport Table from '../../components/Table';\nimport Header from '../../components/Header';\nimport Aside from '../../components/Aside';\nimport Title from '../../components/Title';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport Popup from '../../components/Popup';\nimport Document from '../../components/Document';\nimport api from '../../services/api';\nimport { formatPaymentMethod, formatCoin } from '../../utils/formatFunctions';\n\nconst GenerateDocumentsByContract = () => {\n  const {\n    contract_id\n  } = useParams();\n  const [payments, setPayments] = useState([]);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [payment, setPayment] = useState({});\n  const [discharge, setDischarge] = useState({});\n  const [loadingPage, setLoadingPage] = useState(false);\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\n  useEffect(() => {\n    setLoadingPage(true);\n    api.get(`contracts/${contract_id}/payments`).then(response => setPayments(response.data)).catch(() => {\n      toast.error('Erro ao carragar pagamentos! Por favor, tente novamente mais tarde.');\n    }).finally(() => {\n      setLoadingPage(false);\n    });\n  }, [contract_id]);\n  const handleDischargePayment = useCallback(() => {\n    if (loadingSubmit) {\n      return;\n    }\n\n    setLoadingSubmit(true);\n    api.post('/discharges', {\n      payment_id: payment.id\n    }).then(response => {\n      const dischargeData = response.data;\n      const paymentsList = payments;\n      paymentsList.forEach(p => {\n        if (p.id === payment.id) {\n          Object.assign(p, {\n            discharged: true,\n            discharge: dischargeData\n          });\n        }\n      });\n      setDischarge(dischargeData);\n      setPayments(paymentsList);\n      toast.success('Pagamento recebido com sucesso!');\n    }).catch(err => {\n      if (err.response) {\n        toast.error(`Erro ao receber pagamento: ${err.response.data.message}`);\n      } else {\n        toast.error('Erro interno do servidor! Por favor, tente novamente mais tarde.');\n      }\n    }).finally(() => {\n      setConfirmMessage('');\n      setLoadingSubmit(false);\n    });\n  }, [payment, payments, loadingSubmit]);\n  const handleClosePopup = useCallback(() => {\n    setPayment({});\n    setDischarge({});\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    show: loadingPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Aside, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    title: \"Gerenciar pagamentos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    isVoid: payments.length <= 0,\n    voidMessage: \"N\\xE3o h\\xE1 pagamentos para serem recebidos!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Operador\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Valor\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"M\\xE9todo utilizado\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Data de recebimento\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, payments.map(actualPayment => /*#__PURE__*/React.createElement(Payment, {\n    discharged: actualPayment.discharged,\n    key: actualPayment.id,\n    onClick: () => setPayment(actualPayment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, actualPayment.user.username), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, formatCoin(actualPayment.amount)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, formatPaymentMethod(actualPayment.method)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, actualPayment.discharged ? actualPayment.discharge_day : '-')))))), !!payment.id && /*#__PURE__*/React.createElement(Popup, {\n    title: \"Receber\",\n    handleClosePopup: handleClosePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, !discharge.id && !payment.discharged && /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleDischargePayment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(WarnMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \" ATEN\\xC7\\xC3O: \"), \"esta a\\xE7\\xE3o n\\xE3o pode ser desfeita! Digite\", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \" CONFIRMAR \"), \"para receber o pagamento.\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"confirm_message\",\n    icon: FiCheck,\n    value: confirmMessage,\n    onChange: e => setConfirmMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    disabled: confirmMessage !== 'CONFIRMAR',\n    type: \"submit\",\n    loading: loadingSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, \"Receber\")), (discharge.id || payment.discharge && payment.discharge.receipt_url) && /*#__PURE__*/React.createElement(Document, {\n    name: \"Recibo\",\n    link: discharge.receipt_url || payment.discharge.receipt_url || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default GenerateDocumentsByContract;","map":{"version":3,"sources":["/home/ondaniel/santiago/sisgie-frontend/src/pages/GenerateDocumentsByContract/index.tsx"],"names":["React","useEffect","useState","useCallback","useParams","Form","FiCheck","toast","Container","Main","InputGroup","WarnMessage","Payment","Loading","Table","Header","Aside","Title","Input","Button","Popup","Document","api","formatPaymentMethod","formatCoin","GenerateDocumentsByContract","contract_id","payments","setPayments","confirmMessage","setConfirmMessage","payment","setPayment","discharge","setDischarge","loadingPage","setLoadingPage","loadingSubmit","setLoadingSubmit","get","then","response","data","catch","error","finally","handleDischargePayment","post","payment_id","id","dischargeData","paymentsList","forEach","p","Object","assign","discharged","success","err","message","handleClosePopup","length","map","actualPayment","user","username","amount","method","discharge_day","e","target","value","receipt_url"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form } from '@unform/web';\nimport { FiCheck } from 'react-icons/fi';\nimport { toast } from 'react-toastify';\n\nimport { Container, Main, InputGroup, WarnMessage, Payment } from './styles';\nimport Loading from '../../components/Loading';\nimport Table from '../../components/Table';\nimport Header from '../../components/Header';\nimport Aside from '../../components/Aside';\nimport Title from '../../components/Title';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport Popup from '../../components/Popup';\nimport Document from '../../components/Document';\nimport IPayment from '../../entities/IPayment';\nimport IDischarge from '../../entities/IDischarge';\nimport api from '../../services/api';\nimport { formatPaymentMethod, formatCoin } from '../../utils/formatFunctions';\n\ninterface IParams {\n  contract_id: string;\n}\n\nconst GenerateDocumentsByContract: React.FC = () => {\n  const { contract_id } = useParams<IParams>();\n\n  const [payments, setPayments] = useState([] as IPayment[]);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [payment, setPayment] = useState({} as IPayment);\n  const [discharge, setDischarge] = useState({} as IDischarge);\n  const [loadingPage, setLoadingPage] = useState(false);\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\n\n  useEffect(() => {\n    setLoadingPage(true);\n    api\n      .get(`contracts/${contract_id}/payments`)\n      .then(response => setPayments(response.data))\n      .catch(() => {\n        toast.error(\n          'Erro ao carragar pagamentos! Por favor, tente novamente mais tarde.',\n        );\n      })\n      .finally(() => {\n        setLoadingPage(false);\n      });\n  }, [contract_id]);\n\n  const handleDischargePayment = useCallback(() => {\n    if (loadingSubmit) {\n      return;\n    }\n\n    setLoadingSubmit(true);\n\n    api\n      .post('/discharges', {\n        payment_id: payment.id,\n      })\n      .then(response => {\n        const dischargeData = response.data as IDischarge;\n\n        const paymentsList = payments;\n\n        paymentsList.forEach(p => {\n          if (p.id === payment.id) {\n            Object.assign(p, {\n              discharged: true,\n              discharge: dischargeData,\n            });\n          }\n        });\n\n        setDischarge(dischargeData);\n\n        setPayments(paymentsList);\n\n        toast.success('Pagamento recebido com sucesso!');\n      })\n      .catch(err => {\n        if (err.response) {\n          toast.error(\n            `Erro ao receber pagamento: ${err.response.data.message}`,\n          );\n        } else {\n          toast.error(\n            'Erro interno do servidor! Por favor, tente novamente mais tarde.',\n          );\n        }\n      })\n      .finally(() => {\n        setConfirmMessage('');\n        setLoadingSubmit(false);\n      });\n  }, [payment, payments, loadingSubmit]);\n\n  const handleClosePopup = useCallback(() => {\n    setPayment({} as IPayment);\n    setDischarge({} as IDischarge);\n  }, []);\n\n  return (\n    <Container>\n      <Loading show={loadingPage} />\n\n      <Header />\n\n      <Aside />\n\n      <Main>\n        <Title title=\"Gerenciar pagamentos\" />\n\n        <Table\n          isVoid={payments.length <= 0}\n          voidMessage=\"Não há pagamentos para serem recebidos!\"\n        >\n          <thead>\n            <tr>\n              <td>Operador</td>\n              <td>Valor</td>\n              <td>Método utilizado</td>\n              <td>Data de recebimento</td>\n            </tr>\n          </thead>\n          <tbody>\n            {payments.map(actualPayment => (\n              <Payment\n                discharged={actualPayment.discharged}\n                key={actualPayment.id}\n                onClick={() => setPayment(actualPayment)}\n              >\n                <td>{actualPayment.user.username}</td>\n                <td>{formatCoin(actualPayment.amount)}</td>\n                <td>{formatPaymentMethod(actualPayment.method)}</td>\n                <td>\n                  {actualPayment.discharged ? actualPayment.discharge_day : '-'}\n                </td>\n              </Payment>\n            ))}\n          </tbody>\n        </Table>\n      </Main>\n\n      {!!payment.id && (\n        <Popup title=\"Receber\" handleClosePopup={handleClosePopup}>\n          {!discharge.id && !payment.discharged && (\n            <Form onSubmit={handleDischargePayment}>\n              <WarnMessage>\n                <strong> ATENÇÃO: </strong>\n                esta ação não pode ser desfeita! Digite\n                <b> CONFIRMAR </b>\n                para receber o pagamento.\n              </WarnMessage>\n\n              <InputGroup>\n                <Input\n                  name=\"confirm_message\"\n                  icon={FiCheck}\n                  value={confirmMessage}\n                  onChange={e => setConfirmMessage(e.target.value)}\n                />\n              </InputGroup>\n\n              <Button\n                disabled={confirmMessage !== 'CONFIRMAR'}\n                type=\"submit\"\n                loading={loadingSubmit}\n              >\n                Receber\n              </Button>\n            </Form>\n          )}\n\n          {(discharge.id ||\n            (payment.discharge && payment.discharge.receipt_url)) && (\n            <Document\n              name=\"Recibo\"\n              link={\n                discharge.receipt_url || payment.discharge.receipt_url || ''\n              }\n            />\n          )}\n        </Popup>\n      )}\n    </Container>\n  );\n};\n\nexport default GenerateDocumentsByContract;\n"]},"metadata":{},"sourceType":"module"}