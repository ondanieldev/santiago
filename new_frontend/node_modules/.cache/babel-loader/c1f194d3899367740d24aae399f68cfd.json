{"ast":null,"code":"var _jsxFileName = \"/home/ondaniel/santiago/main/new_frontend/src/pages/ExtraDebits/index.tsx\";\nimport React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { Form } from '@unform/web';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport { Container, Main, ContractsList, Contract, FormGroup, InputGroup } from './styles';\nimport Header from '../../components/Header';\nimport Aside from '../../components/Aside';\nimport Title from '../../components/Title';\nimport Input from '../../components/Input';\nimport Checkbox from '../../components/Checkbox';\nimport Button from '../../components/Button';\nimport Loading from '../../components/Loading';\nimport api from '../../services/api';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nconst CreateExtraDebitMenu = () => {\n  const [contracts, setContracts] = useState([]);\n  const [loadingPage, setLoadingPage] = useState(true);\n  const [loadingSubmit, setLoadingSubmit] = useState(true);\n  const formRef = useRef(null);\n  const {\n    grade_id\n  } = useParams();\n  const handleSubmitForm = useCallback(async ({\n    contracts_ids,\n    description,\n    discount,\n    payment_limit_date,\n    value\n  }) => {\n    try {\n      var _formRef$current;\n\n      setLoadingSubmit(true);\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const validateFormData = Yup.object().shape({\n        description: Yup.string().required('Descrião obrigatória'),\n        discount: Yup.number().typeError(() => 'Desconto precisa ser numérico'),\n        payment_limit_date: Yup.date().typeError(() => 'Deata inválida').required(),\n        value: Yup.number().typeError(() => 'O valor precisa ser numérico').required()\n      });\n      await validateFormData.validate({\n        description,\n        discount,\n        payment_limit_date,\n        value\n      }, {\n        abortEarly: false\n      });\n      const selectedContracts = Object.entries(contracts_ids);\n      const promises = [];\n      selectedContracts.forEach(([contract_id, selected]) => {\n        if (selected) {\n          promises.push(api.post('/debits/extra', {\n            contract_id,\n            description,\n            discount,\n            payment_limit_date,\n            value\n          }));\n        }\n      });\n      await Promise.all(promises);\n      toast.success('Débitos criados com sucesso!');\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        toast.error('Oops... alguns dados não foram preenchidos corretamente!');\n        return;\n      }\n\n      if (err.response) {\n        toast.error(`Erro ao criar débito: ${err.response.data.message}`);\n      } else {\n        toast.error('Erro interno do servidor! Por favor, tente novamente mais tarde.');\n      }\n    } finally {\n      setLoadingSubmit(false);\n    }\n  }, []);\n  const handleToggleAll = useCallback(state => {\n    contracts.forEach(contract => {\n      var _formRef$current3;\n\n      (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 ? void 0 : _formRef$current3.setFieldValue(`contracts_ids.${contract.id}`, !!state.checked);\n    });\n  }, [contracts]);\n  useEffect(() => {\n    api.get(`/contracts/active/grades/${grade_id}`).then(response => {\n      const contractsFromApi = response.data;\n      setContracts(contractsFromApi);\n    }).catch(() => {\n      toast.error('Erro ao buscar dados do servidor! Por favor, tente novamente mais tarde.');\n    }).finally(() => {\n      setLoadingPage(false);\n    });\n  }, [grade_id]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    show: loadingPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Aside, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    title: \"Criar d\\xE9bitos adicionais\",\n    subtitle: \"Preencha os dados do d\\xE9bito e selecione as matr\\xEDculas em que ser\\xE3o aplicados\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"description\",\n    placeholder: \"Descri\\xE7\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    step: \"0.01\",\n    name: \"value\",\n    placeholder: \"Valor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    step: \"0.01\",\n    name: \"discount\",\n    placeholder: \"Desconto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"payment_limit_date\",\n    label: \"Data limite de pagamento\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(ContractsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"select_all\",\n    label: \"Selecionar todos\",\n    onClick: e => handleToggleAll(e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }), contracts.map(contract => /*#__PURE__*/React.createElement(Contract, {\n    key: contract.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: `contracts_ids.${contract.id}`,\n    label: contract.student.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    loading: loadingSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"Criar\"))));\n};\n\nexport default CreateExtraDebitMenu;","map":{"version":3,"sources":["/home/ondaniel/santiago/main/new_frontend/src/pages/ExtraDebits/index.tsx"],"names":["React","useRef","useCallback","useState","useEffect","Form","useParams","toast","Yup","Container","Main","ContractsList","Contract","FormGroup","InputGroup","Header","Aside","Title","Input","Checkbox","Button","Loading","api","getValidationErrors","CreateExtraDebitMenu","contracts","setContracts","loadingPage","setLoadingPage","loadingSubmit","setLoadingSubmit","formRef","grade_id","handleSubmitForm","contracts_ids","description","discount","payment_limit_date","value","current","setErrors","validateFormData","object","shape","string","required","number","typeError","date","validate","abortEarly","selectedContracts","Object","entries","promises","forEach","contract_id","selected","push","post","Promise","all","success","err","ValidationError","errors","error","response","data","message","handleToggleAll","state","contract","setFieldValue","id","checked","get","then","contractsFromApi","catch","finally","e","target","map","student","name"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport { AxiosResponse } from 'axios';\n\nimport {\n  Container,\n  Main,\n  ContractsList,\n  Contract,\n  FormGroup,\n  InputGroup,\n} from './styles';\nimport Header from '../../components/Header';\nimport Aside from '../../components/Aside';\nimport Title from '../../components/Title';\nimport Input from '../../components/Input';\nimport Checkbox from '../../components/Checkbox';\nimport Button from '../../components/Button';\nimport Loading from '../../components/Loading';\nimport IContract from '../../entities/IContract';\nimport api from '../../services/api';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\ninterface IParams {\n  grade_id: string;\n}\n\ninterface IContractProps extends IContract {\n  selected?: boolean;\n}\n\ninterface IFormContracts {\n  [key: string]: boolean;\n}\n\ninterface IFormData {\n  description: string;\n  discount: number;\n  payment_limit_date: Date;\n  select_all: boolean;\n  value: number;\n  contracts_ids: IFormContracts;\n}\n\nconst CreateExtraDebitMenu: React.FC = () => {\n  const [contracts, setContracts] = useState<IContractProps[]>([]);\n  const [loadingPage, setLoadingPage] = useState(true);\n  const [loadingSubmit, setLoadingSubmit] = useState(true);\n\n  const formRef = useRef<FormHandles>(null);\n\n  const { grade_id } = useParams<IParams>();\n\n  const handleSubmitForm = useCallback(\n    async ({\n      contracts_ids,\n      description,\n      discount,\n      payment_limit_date,\n      value,\n    }: IFormData) => {\n      try {\n        setLoadingSubmit(true);\n\n        formRef.current?.setErrors({});\n\n        const validateFormData = Yup.object().shape({\n          description: Yup.string().required('Descrião obrigatória'),\n          discount: Yup.number().typeError(\n            () => 'Desconto precisa ser numérico',\n          ),\n          payment_limit_date: Yup.date()\n            .typeError(() => 'Deata inválida')\n            .required(),\n          value: Yup.number()\n            .typeError(() => 'O valor precisa ser numérico')\n            .required(),\n        });\n\n        await validateFormData.validate(\n          {\n            description,\n            discount,\n            payment_limit_date,\n            value,\n          },\n          { abortEarly: false },\n        );\n\n        const selectedContracts = Object.entries(contracts_ids);\n\n        const promises = [] as Promise<AxiosResponse>[];\n\n        selectedContracts.forEach(([contract_id, selected]) => {\n          if (selected) {\n            promises.push(\n              api.post('/debits/extra', {\n                contract_id,\n                description,\n                discount,\n                payment_limit_date,\n                value,\n              }),\n            );\n          }\n        });\n\n        await Promise.all(promises);\n\n        toast.success('Débitos criados com sucesso!');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          toast.error(\n            'Oops... alguns dados não foram preenchidos corretamente!',\n          );\n          return;\n        }\n\n        if (err.response) {\n          toast.error(`Erro ao criar débito: ${err.response.data.message}`);\n        } else {\n          toast.error(\n            'Erro interno do servidor! Por favor, tente novamente mais tarde.',\n          );\n        }\n      } finally {\n        setLoadingSubmit(false);\n      }\n    },\n    [],\n  );\n\n  const handleToggleAll = useCallback(\n    (state: HTMLInputElement) => {\n      contracts.forEach(contract => {\n        formRef.current?.setFieldValue(\n          `contracts_ids.${contract.id}`,\n          !!state.checked,\n        );\n      });\n    },\n    [contracts],\n  );\n\n  useEffect(() => {\n    api\n      .get(`/contracts/active/grades/${grade_id}`)\n      .then(response => {\n        const contractsFromApi = response.data as IContractProps[];\n\n        setContracts(contractsFromApi);\n      })\n      .catch(() => {\n        toast.error(\n          'Erro ao buscar dados do servidor! Por favor, tente novamente mais tarde.',\n        );\n      })\n      .finally(() => {\n        setLoadingPage(false);\n      });\n  }, [grade_id]);\n\n  return (\n    <Container>\n      <Loading show={loadingPage} />\n\n      <Header />\n\n      <Aside />\n\n      <Main>\n        <Title\n          title=\"Criar débitos adicionais\"\n          subtitle=\"Preencha os dados do débito e selecione as matrículas em que serão aplicados\"\n        />\n\n        <Form ref={formRef} onSubmit={handleSubmitForm}>\n          <FormGroup>\n            <InputGroup>\n              <Input name=\"description\" placeholder=\"Descrição\" />\n\n              <Input\n                type=\"number\"\n                step=\"0.01\"\n                name=\"value\"\n                placeholder=\"Valor\"\n              />\n            </InputGroup>\n\n            <InputGroup>\n              <Input\n                type=\"number\"\n                step=\"0.01\"\n                name=\"discount\"\n                placeholder=\"Desconto\"\n              />\n\n              <Input\n                type=\"date\"\n                name=\"payment_limit_date\"\n                label=\"Data limite de pagamento\"\n              />\n            </InputGroup>\n          </FormGroup>\n\n          <ContractsList>\n            <Checkbox\n              name=\"select_all\"\n              label=\"Selecionar todos\"\n              onClick={e => handleToggleAll(e.target as HTMLInputElement)}\n            />\n\n            {contracts.map(contract => (\n              <Contract key={contract.id}>\n                <Checkbox\n                  name={`contracts_ids.${contract.id}`}\n                  label={contract.student.name}\n                />\n              </Contract>\n            ))}\n          </ContractsList>\n\n          <Button loading={loadingSubmit} type=\"submit\">\n            Criar\n          </Button>\n        </Form>\n      </Main>\n    </Container>\n  );\n};\n\nexport default CreateExtraDebitMenu;\n"]},"metadata":{},"sourceType":"module"}