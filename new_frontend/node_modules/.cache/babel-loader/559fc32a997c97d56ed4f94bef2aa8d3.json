{"ast":null,"code":"var _jsxFileName = \"/home/ondaniel/santiago/main/new_frontend/src/hooks/auth.tsx\";\nimport React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\nconst AuthContext = createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem('@Santiago:token');\n    const user = localStorage.getItem('@Santiago:user');\n\n    if (token && user) {\n      api.defaults.headers.authorization = `bearer ${token}`;\n      return {\n        token,\n        user: JSON.parse(user)\n      };\n    }\n\n    return {};\n  });\n  const signIn = useCallback(async ({\n    username,\n    password\n  }) => {\n    const response = await api.post('/sessions', {\n      username,\n      password\n    });\n    localStorage.setItem('@Santiago:token', response.data.token);\n    localStorage.setItem('@Santiago:user', JSON.stringify(response.data.user));\n    api.defaults.headers.authorization = `bearer ${response.data.token}`;\n    setData(response.data);\n  }, []);\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@Santiago:token');\n    localStorage.removeItem('@Santiago:user');\n    delete api.defaults.headers.authorization;\n    setData({});\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user: data.user,\n      signIn,\n      signOut\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthContext Provider');\n  }\n\n  return context;\n};","map":{"version":3,"sources":["/home/ondaniel/santiago/main/new_frontend/src/hooks/auth.tsx"],"names":["React","createContext","useCallback","useState","useContext","api","AuthContext","AuthProvider","children","data","setData","token","localStorage","getItem","user","defaults","headers","authorization","JSON","parse","signIn","username","password","response","post","setItem","stringify","signOut","removeItem","useAuth","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,EAAsDC,UAAtD,QAAwE,OAAxE;AAGA,OAAOC,GAAP,MAAgB,iBAAhB;AAkBA,MAAMC,WAAW,GAAGL,aAAa,CAAkB,EAAlB,CAAjC;AAEA,OAAO,MAAMM,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAY,MAAM;AAChD,UAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAd;AACA,UAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAb;;AAEA,QAAIF,KAAK,IAAIG,IAAb,EAAmB;AACjBT,MAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASN,KAAM,EAArD;AAEA,aAAO;AAAEA,QAAAA,KAAF;AAASG,QAAAA,IAAI,EAAEI,IAAI,CAACC,KAAL,CAAWL,IAAX;AAAf,OAAP;AACD;;AAED,WAAO,EAAP;AACD,GAX+B,CAAhC;AAaA,QAAMM,MAAM,GAAGlB,WAAW,CACxB,OAAO;AAAEmB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAP,KAAqD;AACnD,UAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAJ,CAAS,WAAT,EAAsB;AAC3CH,MAAAA,QAD2C;AAE3CC,MAAAA;AAF2C,KAAtB,CAAvB;AAKAV,IAAAA,YAAY,CAACa,OAAb,CAAqB,iBAArB,EAAwCF,QAAQ,CAACd,IAAT,CAAcE,KAAtD;AACAC,IAAAA,YAAY,CAACa,OAAb,CACE,gBADF,EAEEP,IAAI,CAACQ,SAAL,CAAeH,QAAQ,CAACd,IAAT,CAAcK,IAA7B,CAFF;AAKAT,IAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASM,QAAQ,CAACd,IAAT,CAAcE,KAAM,EAAnE;AAEAD,IAAAA,OAAO,CAACa,QAAQ,CAACd,IAAV,CAAP;AACD,GAhBuB,EAiBxB,EAjBwB,CAA1B;AAoBA,QAAMkB,OAAO,GAAGzB,WAAW,CAAC,MAAM;AAChCU,IAAAA,YAAY,CAACgB,UAAb,CAAwB,iBAAxB;AACAhB,IAAAA,YAAY,CAACgB,UAAb,CAAwB,gBAAxB;AAEA,WAAOvB,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAA5B;AAEAP,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAP0B,EAOxB,EAPwB,CAA3B;AASA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEI,MAAAA,IAAI,EAAEL,IAAI,CAACK,IAAb;AAAmBM,MAAAA,MAAnB;AAA2BO,MAAAA;AAA3B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,QADH,CADF;AAKD,CAhDM;AAkDP,OAAO,MAAMqB,OAAO,GAAG,MAAuB;AAC5C,QAAMC,OAAO,GAAG1B,UAAU,CAACE,WAAD,CAA1B;;AAEA,MAAI,CAACwB,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,qDAAV,CAAN;AACD;;AAED,SAAOD,OAAP;AACD,CARM","sourcesContent":["import React, { createContext, useCallback, useState, useContext } from 'react';\n\nimport IUser from '../entities/IUser';\nimport api from '../services/api';\n\ninterface AuthState {\n  token: string;\n  user: IUser;\n}\n\ninterface SignInCredentials {\n  username: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: IUser;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@Santiago:token');\n    const user = localStorage.getItem('@Santiago:user');\n\n    if (token && user) {\n      api.defaults.headers.authorization = `bearer ${token}`;\n\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(\n    async ({ username, password }: SignInCredentials) => {\n      const response = await api.post('/sessions', {\n        username,\n        password,\n      });\n\n      localStorage.setItem('@Santiago:token', response.data.token);\n      localStorage.setItem(\n        '@Santiago:user',\n        JSON.stringify(response.data.user),\n      );\n\n      api.defaults.headers.authorization = `bearer ${response.data.token}`;\n\n      setData(response.data);\n    },\n    [],\n  );\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@Santiago:token');\n    localStorage.removeItem('@Santiago:user');\n\n    delete api.defaults.headers.authorization;\n\n    setData({} as AuthState);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextData => {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthContext Provider');\n  }\n\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}