{"ast":null,"code":"var _jsxFileName = \"/home/ondaniel/santiago/main/new_frontend/src/pages/SignIn/index.tsx\";\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Form } from '@unform/web';\nimport { FiUser, FiLock } from 'react-icons/fi';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { Container, Content, AnimatedContent, Background } from './styles';\nimport { useAuth } from '../../hooks/auth';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport getValidationErrors from '../../utils/getValidationErrors';\ntoast.configure();\n\nconst SignIn = () => {\n  const formRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const {\n    signIn\n  } = useAuth();\n  const handleSignIn = useCallback(async data => {\n    if (loading) {\n      return;\n    }\n\n    try {\n      var _formRef$current;\n\n      setLoading(true);\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        username: Yup.string().required('Nome de usuário obrigatório'),\n        password: Yup.string().required('Senha obrigatória')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await signIn({\n        username: data.username,\n        password: data.password\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      toast.error('Credenciais incorretas!');\n    } finally {\n      setLoading(false);\n    }\n  }, [signIn, loading]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AnimatedContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Fa\\xE7a seu login\"), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    icon: FiUser,\n    name: \"username\",\n    placeholder: \"Usu\\xE1rio\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    icon: FiLock,\n    name: \"password\",\n    placeholder: \"Senha\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Entrar\")))), /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/ondaniel/santiago/main/new_frontend/src/pages/SignIn/index.tsx"],"names":["React","useCallback","useRef","useState","Form","FiUser","FiLock","Yup","toast","Container","Content","AnimatedContent","Background","useAuth","Input","Button","getValidationErrors","configure","SignIn","formRef","loading","setLoading","signIn","handleSignIn","data","current","setErrors","schema","object","shape","username","string","required","password","validate","abortEarly","err","ValidationError","errors","error"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { FiUser, FiLock } from 'react-icons/fi';\nimport * as Yup from 'yup';\n\nimport { toast } from 'react-toastify';\nimport { Container, Content, AnimatedContent, Background } from './styles';\nimport { useAuth } from '../../hooks/auth';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\ninterface SignInFormData {\n  username: string;\n  password: string;\n}\n\ntoast.configure();\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const [loading, setLoading] = useState(false);\n\n  const { signIn } = useAuth();\n\n  const handleSignIn = useCallback(\n    async (data: SignInFormData) => {\n      if (loading) {\n        return;\n      }\n\n      try {\n        setLoading(true);\n\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          username: Yup.string().required('Nome de usuário obrigatório'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({\n          username: data.username,\n          password: data.password,\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        toast.error('Credenciais incorretas!');\n      } finally {\n        setLoading(false);\n      }\n    },\n    [signIn, loading],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimatedContent>\n          <h1>Faça seu login</h1>\n\n          <Form ref={formRef} onSubmit={handleSignIn}>\n            <Input\n              icon={FiUser}\n              name=\"username\"\n              placeholder=\"Usuário\"\n              autoComplete=\"off\"\n            />\n\n            <Input\n              icon={FiLock}\n              name=\"password\"\n              placeholder=\"Senha\"\n              type=\"password\"\n            />\n\n            <Button loading={loading} type=\"submit\">\n              Entrar\n            </Button>\n          </Form>\n        </AnimatedContent>\n      </Content>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}