{"ast":null,"code":"var _jsxFileName = \"/home/ondaniel/santiago/sisgie-frontend/src/pages/Grades/index.tsx\";\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { Form } from '@unform/web';\nimport { FiInfo, FiCalendar, FiDollarSign, FiEdit2 } from 'react-icons/fi';\nimport { ValidationError as YupValidationError } from 'yup';\nimport { toast } from 'react-toastify';\nimport { Container, Main, ButtonGroup, DoubleColumn } from './styles';\nimport Loading from '../../components/Loading';\nimport Header from '../../components/Header';\nimport Aside from '../../components/Aside';\nimport Title from '../../components/Title';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport GradesList from '../../components/List';\nimport api from '../../services/api';\nimport gradeSchema from '../../schemas/gradeSchema';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nconst Users = () => {\n  const formRef = useRef(null);\n  const [grades, setGrades] = useState([]);\n  const [gradeId, setGradeId] = useState('');\n  const [loadingPage, setLoadingPage] = useState(false);\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\n  useEffect(() => {\n    setLoadingPage(true);\n    api.get('/grades').then(response => setGrades(response.data)).catch(() => {\n      toast.error('Erro ao carregar turmas! Por favor, tente novamente mais tarde.');\n    }).finally(() => {\n      setLoadingPage(false);\n    });\n  }, []);\n  const handleGetGrade = useCallback(data => {\n    var _formRef$current, _formRef$current2;\n\n    setGradeId(data.id);\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n    (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setData(data);\n  }, []);\n  const handleUngetGrade = useCallback(() => {\n    var _formRef$current3, _formRef$current4;\n\n    setGradeId('');\n    (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 ? void 0 : _formRef$current3.setErrors({});\n    (_formRef$current4 = formRef.current) === null || _formRef$current4 === void 0 ? void 0 : _formRef$current4.reset();\n  }, []);\n  const handleAddGrade = useCallback(async (data, {\n    reset\n  }) => {\n    if (loadingSubmit) {\n      return;\n    }\n\n    setLoadingSubmit(true);\n\n    try {\n      var _formRef$current5;\n\n      (_formRef$current5 = formRef.current) === null || _formRef$current5 === void 0 ? void 0 : _formRef$current5.setErrors({});\n      await gradeSchema.validate(data, {\n        abortEarly: false\n      });\n      const response = await api.post('/grades', data);\n      setGrades([...grades, response.data]);\n      reset();\n      toast.success('Turma criada com sucesso!');\n    } catch (err) {\n      if (err instanceof YupValidationError) {\n        var _formRef$current6;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current6 = formRef.current) === null || _formRef$current6 === void 0 ? void 0 : _formRef$current6.setErrors(errors);\n        return;\n      }\n\n      if (err.response) {\n        toast.error(`Erro ao criar turma: ${err.response.data.message}`);\n      } else {\n        toast.error('Erro interno do servidor! Por favor, tente novamente mais tarde.');\n      }\n    } finally {\n      setLoadingSubmit(false);\n    }\n  }, [grades, loadingSubmit]);\n  const handleUpdateGrade = useCallback(async (data, {\n    reset\n  }) => {\n    if (loadingSubmit) {\n      return;\n    }\n\n    setLoadingSubmit(true);\n\n    try {\n      var _formRef$current7;\n\n      (_formRef$current7 = formRef.current) === null || _formRef$current7 === void 0 ? void 0 : _formRef$current7.setErrors({});\n      await gradeSchema.validate(data, {\n        abortEarly: false\n      });\n      const response = await api.put(`/grades/${gradeId}`, data);\n      const gradesWithoutEdited = grades.filter(grade => grade.id !== gradeId);\n      setGrades([...gradesWithoutEdited, response.data]);\n      setGradeId('');\n      reset();\n      toast.success('Turma atualizada com sucesso!');\n    } catch (err) {\n      if (err instanceof YupValidationError) {\n        var _formRef$current8;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current8 = formRef.current) === null || _formRef$current8 === void 0 ? void 0 : _formRef$current8.setErrors(errors);\n        return;\n      }\n\n      if (err.response) {\n        toast.error(`Erro ao atualizar turma: ${err.response.data.message}`);\n      } else {\n        toast.error('Erro interno do servidor! Por favor, tente novamente mais tarde.');\n      }\n    } finally {\n      setLoadingSubmit(false);\n    }\n  }, [grades, gradeId, loadingSubmit]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    show: loadingPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Aside, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    title: \"Gerenciar turmas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DoubleColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: !gradeId ? handleAddGrade : handleUpdateGrade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Nome\",\n    name: \"name\",\n    icon: FiInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Ano\",\n    name: \"year\",\n    icon: FiCalendar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Valor\",\n    name: \"value\",\n    type: \"number\",\n    icon: FiDollarSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, !gradeId ? /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    loading: loadingSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"Adicionar\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    loading: loadingSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, \"Atualizar\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    backgroundColor: \"#f44336\",\n    onClick: handleUngetGrade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, \"Cancelar\")))), grades.length > 0 && /*#__PURE__*/React.createElement(GradesList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, grades.map(grade => /*#__PURE__*/React.createElement(\"li\", {\n    key: grade.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiEdit2, {\n    size: 20,\n    onClick: () => handleGetGrade(grade),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, `${grade.name} - ${grade.year}`)))))));\n};\n\nexport default Users;","map":{"version":3,"sources":["/home/ondaniel/santiago/sisgie-frontend/src/pages/Grades/index.tsx"],"names":["React","useState","useCallback","useEffect","useRef","Form","FiInfo","FiCalendar","FiDollarSign","FiEdit2","ValidationError","YupValidationError","toast","Container","Main","ButtonGroup","DoubleColumn","Loading","Header","Aside","Title","Input","Button","GradesList","api","gradeSchema","getValidationErrors","Users","formRef","grades","setGrades","gradeId","setGradeId","loadingPage","setLoadingPage","loadingSubmit","setLoadingSubmit","get","then","response","data","catch","error","finally","handleGetGrade","id","current","setErrors","setData","handleUngetGrade","reset","handleAddGrade","validate","abortEarly","post","success","err","errors","message","handleUpdateGrade","put","gradesWithoutEdited","filter","grade","length","map","name","year"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { FiInfo, FiCalendar, FiDollarSign, FiEdit2 } from 'react-icons/fi';\nimport { ValidationError as YupValidationError } from 'yup';\nimport { toast } from 'react-toastify';\n\nimport { Container, Main, ButtonGroup, DoubleColumn } from './styles';\nimport Loading from '../../components/Loading';\nimport Header from '../../components/Header';\nimport Aside from '../../components/Aside';\nimport Title from '../../components/Title';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport GradesList from '../../components/List';\nimport IGrade from '../../entities/IGrade';\nimport api from '../../services/api';\nimport gradeSchema from '../../schemas/gradeSchema';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nconst Users: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const [grades, setGrades] = useState([] as IGrade[]);\n  const [gradeId, setGradeId] = useState('');\n  const [loadingPage, setLoadingPage] = useState(false);\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\n\n  useEffect(() => {\n    setLoadingPage(true);\n    api\n      .get('/grades')\n      .then(response => setGrades(response.data))\n      .catch(() => {\n        toast.error(\n          'Erro ao carregar turmas! Por favor, tente novamente mais tarde.',\n        );\n      })\n      .finally(() => {\n        setLoadingPage(false);\n      });\n  }, []);\n\n  const handleGetGrade = useCallback((data: IGrade) => {\n    setGradeId(data.id);\n\n    formRef.current?.setErrors({});\n\n    formRef.current?.setData(data);\n  }, []);\n\n  const handleUngetGrade = useCallback(() => {\n    setGradeId('');\n\n    formRef.current?.setErrors({});\n\n    formRef.current?.reset();\n  }, []);\n\n  const handleAddGrade = useCallback(\n    async (data: Omit<IGrade, 'id'>, { reset }) => {\n      if (loadingSubmit) {\n        return;\n      }\n\n      setLoadingSubmit(true);\n\n      try {\n        formRef.current?.setErrors({});\n\n        await gradeSchema.validate(data, {\n          abortEarly: false,\n        });\n\n        const response = await api.post('/grades', data);\n\n        setGrades([...grades, response.data]);\n\n        reset();\n\n        toast.success('Turma criada com sucesso!');\n      } catch (err) {\n        if (err instanceof YupValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        if (err.response) {\n          toast.error(`Erro ao criar turma: ${err.response.data.message}`);\n        } else {\n          toast.error(\n            'Erro interno do servidor! Por favor, tente novamente mais tarde.',\n          );\n        }\n      } finally {\n        setLoadingSubmit(false);\n      }\n    },\n    [grades, loadingSubmit],\n  );\n\n  const handleUpdateGrade = useCallback(\n    async (data: IGrade, { reset }) => {\n      if (loadingSubmit) {\n        return;\n      }\n\n      setLoadingSubmit(true);\n\n      try {\n        formRef.current?.setErrors({});\n\n        await gradeSchema.validate(data, {\n          abortEarly: false,\n        });\n\n        const response = await api.put(`/grades/${gradeId}`, data);\n\n        const gradesWithoutEdited = grades.filter(\n          grade => grade.id !== gradeId,\n        );\n\n        setGrades([...gradesWithoutEdited, response.data]);\n\n        setGradeId('');\n\n        reset();\n\n        toast.success('Turma atualizada com sucesso!');\n      } catch (err) {\n        if (err instanceof YupValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        if (err.response) {\n          toast.error(`Erro ao atualizar turma: ${err.response.data.message}`);\n        } else {\n          toast.error(\n            'Erro interno do servidor! Por favor, tente novamente mais tarde.',\n          );\n        }\n      } finally {\n        setLoadingSubmit(false);\n      }\n    },\n    [grades, gradeId, loadingSubmit],\n  );\n\n  return (\n    <Container>\n      <Loading show={loadingPage} />\n\n      <Header />\n\n      <Aside />\n\n      <Main>\n        <Title title=\"Gerenciar turmas\" />\n\n        <DoubleColumn>\n          <Form\n            ref={formRef}\n            onSubmit={!gradeId ? handleAddGrade : handleUpdateGrade}\n          >\n            <Input placeholder=\"Nome\" name=\"name\" icon={FiInfo} />\n\n            <Input placeholder=\"Ano\" name=\"year\" icon={FiCalendar} />\n\n            <Input\n              placeholder=\"Valor\"\n              name=\"value\"\n              type=\"number\"\n              icon={FiDollarSign}\n            />\n\n            <ButtonGroup>\n              {!gradeId ? (\n                <Button type=\"submit\" loading={loadingSubmit}>\n                  Adicionar\n                </Button>\n              ) : (\n                <>\n                  <Button type=\"submit\" loading={loadingSubmit}>\n                    Atualizar\n                  </Button>\n\n                  <Button\n                    type=\"submit\"\n                    backgroundColor=\"#f44336\"\n                    onClick={handleUngetGrade}\n                  >\n                    Cancelar\n                  </Button>\n                </>\n              )}\n            </ButtonGroup>\n          </Form>\n\n          {grades.length > 0 && (\n            <GradesList>\n              {grades.map(grade => (\n                <li key={grade.id}>\n                  <FiEdit2 size={20} onClick={() => handleGetGrade(grade)} />\n                  {/* <FiTrash\n                    size={20}\n                    onClick={() => handleRemoveGrade(grade.id)}\n                  /> */}\n                  <span>{`${grade.name} - ${grade.year}`}</span>\n                </li>\n              ))}\n            </GradesList>\n          )}\n        </DoubleColumn>\n      </Main>\n    </Container>\n  );\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}