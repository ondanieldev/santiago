{"ast":null,"code":"var _jsxFileName = \"/home/ondaniel/santiago/main/new_frontend/src/pages/ExtraDebitsByContract/index.tsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { isPast, differenceInCalendarMonths, parseISO } from 'date-fns';\nimport { Container, Main, Debit } from './styles';\nimport Loading from '../../components/Loading';\nimport Title from '../../components/Title';\nimport Table from '../../components/Table';\nimport Header from '../../components/Header';\nimport Aside from '../../components/Aside';\nimport api from '../../services/api';\nimport { prettyDate, formatCoin } from '../../utils/formatFunctions';\n\nconst ExtraDebitsByContract = () => {\n  const formRef = useRef(null);\n  const {\n    contract_id\n  } = useParams();\n  const [debits, setDebits] = useState([]);\n  const [selectedDebit, setSelectedDebit] = useState({});\n  const [payment, setPayment] = useState({});\n  const [loadingPage, setLoadingPage] = useState(false);\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\n  useEffect(() => {\n    setLoadingPage(true);\n    api.get(`contracts/${contract_id}/debits`).then(response => {\n      const debitsFromApi = response.data;\n      debitsFromApi.forEach(debit => {\n        const parsedDebitDate = parseISO(debit.payment_limit_date.toString());\n        let true_value = debit.value;\n\n        if (isPast(parsedDebitDate)) {\n          const months = differenceInCalendarMonths(new Date(), parsedDebitDate);\n          true_value = debit.value * 1.03 ** months;\n        } else {\n          true_value = debit.value - debit.value * debit.discount / 100;\n        }\n\n        Object.assign(debit, {\n          true_value\n        });\n      });\n      setDebits(response.data);\n    }).catch(() => {\n      toast.error('Erro ao carregar dÃ©bitos! Por favor, tente novamente mais tarde.');\n    }).finally(() => {\n      setLoadingPage(false);\n    });\n  }, [contract_id]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    show: loadingPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Aside, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    title: \"Gerenciar d\\xE9bitos adicionais\",\n    subtitle: `Contrato #${contract_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    isVoid: debits.length <= 0,\n    voidMessage: \"N\\xE3o h\\xE1 d\\xE9bitos para serem pagos!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Valor\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Valor com varia\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"Data limite do pagamento\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Data de pagamento\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"A\\xE7\\xF5es\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, debits.map(debit => /*#__PURE__*/React.createElement(Debit, {\n    paid: debit.paid,\n    key: debit.id,\n    onClick: () => setSelectedDebit(debit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, debit.description), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, formatCoin(debit.value)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, debit.true_value ? formatCoin(debit.true_value) : debit.value), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, prettyDate(debit.payment_limit_date)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, debit.payday ? prettyDate(debit.payday) : '-'), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Bot\\xF5es\")))))));\n};\n\nexport default ExtraDebitsByContract;","map":{"version":3,"sources":["/home/ondaniel/santiago/main/new_frontend/src/pages/ExtraDebitsByContract/index.tsx"],"names":["React","useEffect","useState","useRef","useParams","toast","isPast","differenceInCalendarMonths","parseISO","Container","Main","Debit","Loading","Title","Table","Header","Aside","api","prettyDate","formatCoin","ExtraDebitsByContract","formRef","contract_id","debits","setDebits","selectedDebit","setSelectedDebit","payment","setPayment","loadingPage","setLoadingPage","loadingSubmit","setLoadingSubmit","get","then","response","debitsFromApi","data","forEach","debit","parsedDebitDate","payment_limit_date","toString","true_value","value","months","Date","discount","Object","assign","catch","error","finally","length","map","paid","id","description","payday"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport { FiDollarSign } from 'react-icons/fi';\nimport { ValidationError as YupValidationError } from 'yup';\nimport { toast } from 'react-toastify';\nimport { isPast, differenceInCalendarMonths, parseISO } from 'date-fns';\n\nimport { Container, Main, InputGroup, Debit } from './styles';\nimport { paymentMethods } from '../../utils/defaults';\nimport Loading from '../../components/Loading';\nimport Title from '../../components/Title';\nimport Table from '../../components/Table';\nimport Header from '../../components/Header';\nimport Aside from '../../components/Aside';\nimport Select from '../../components/SelectInput';\nimport Button from '../../components/Button';\nimport Popup from '../../components/Popup';\nimport Document from '../../components/Document';\nimport IDebit from '../../entities/IDebit';\nimport IPayment from '../../entities/IPayment';\nimport api from '../../services/api';\nimport paymentSchema from '../../schemas/paymentSchema';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { prettyDate, formatCoin } from '../../utils/formatFunctions';\n\ninterface IFormData {\n  method: 'creditCard' | 'debitCard' | 'cash' | 'check' | 'deposit' | 'slip';\n}\n\ninterface IParams {\n  contract_id: string;\n}\n\ninterface IDebitWithVariation extends IDebit {\n  true_value?: number;\n}\n\nconst ExtraDebitsByContract: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { contract_id } = useParams<IParams>();\n\n  const [debits, setDebits] = useState([] as IDebitWithVariation[]);\n  const [selectedDebit, setSelectedDebit] = useState({} as IDebitWithVariation);\n  const [payment, setPayment] = useState({} as IPayment);\n  const [loadingPage, setLoadingPage] = useState(false);\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\n\n  useEffect(() => {\n    setLoadingPage(true);\n    api\n      .get(`contracts/${contract_id}/debits`)\n      .then(response => {\n        const debitsFromApi = response.data;\n\n        debitsFromApi.forEach((debit: IDebitWithVariation) => {\n          const parsedDebitDate = parseISO(debit.payment_limit_date.toString());\n\n          let true_value = debit.value;\n\n          if (isPast(parsedDebitDate)) {\n            const months = differenceInCalendarMonths(\n              new Date(),\n              parsedDebitDate,\n            );\n\n            true_value = debit.value * 1.03 ** months;\n          } else {\n            true_value = debit.value - (debit.value * debit.discount) / 100;\n          }\n\n          Object.assign(debit, { true_value });\n        });\n\n        setDebits(response.data);\n      })\n      .catch(() => {\n        toast.error(\n          'Erro ao carregar dÃ©bitos! Por favor, tente novamente mais tarde.',\n        );\n      })\n      .finally(() => {\n        setLoadingPage(false);\n      });\n  }, [contract_id]);\n\n  return (\n    <Container>\n      <Loading show={loadingPage} />\n\n      <Header />\n\n      <Aside />\n\n      <Main>\n        <Title\n          title=\"Gerenciar dÃ©bitos adicionais\"\n          subtitle={`Contrato #${contract_id}`}\n        />\n\n        <Table\n          isVoid={debits.length <= 0}\n          voidMessage=\"NÃ£o hÃ¡ dÃ©bitos para serem pagos!\"\n        >\n          <thead>\n            <tr>\n              <td>DescriÃ§Ã£o</td>\n              <td>Valor</td>\n              <td>Valor com variaÃ§Ã£o</td>\n              <td>Data limite do pagamento</td>\n              <td>Data de pagamento</td>\n              <td>AÃ§Ãµes</td>\n            </tr>\n          </thead>\n          <tbody>\n            {debits.map(debit => (\n              <Debit\n                paid={debit.paid}\n                key={debit.id}\n                onClick={() => setSelectedDebit(debit)}\n              >\n                <td>{debit.description}</td>\n                <td>{formatCoin(debit.value)}</td>\n                <td>\n                  {debit.true_value\n                    ? formatCoin(debit.true_value)\n                    : debit.value}\n                </td>\n                <td>{prettyDate(debit.payment_limit_date)}</td>\n                <td>{debit.payday ? prettyDate(debit.payday) : '-'}</td>\n                <td>BotÃµes</td>\n              </Debit>\n            ))}\n          </tbody>\n        </Table>\n      </Main>\n    </Container>\n  );\n};\n\nexport default ExtraDebitsByContract;\n"]},"metadata":{},"sourceType":"module"}