{"ast":null,"code":"var _jsxFileName = \"/home/ondaniel/santiago/sisgie-frontend/src/components/RadioInput/index.tsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\nimport { Container, RadioGroup, Error } from './styles';\n\nconst RadioInput = ({\n  name,\n  label,\n  options,\n  change\n}) => {\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    error,\n    registerField\n  } = useField(name);\n  const [selectedValue, setSelectedValue] = useState(() => {\n    const defaultOption = options.find(option => option.default);\n    return defaultOption ? defaultOption.value : '';\n  });\n  const [defaultValue, setDefaultValue] = useState(() => {\n    const defaultOption = options.find(option => option.default);\n    return defaultOption ? defaultOption.id : '';\n  });\n  const [isErrored, setIsErrored] = useState(false);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n\n      setValue(_, value) {\n        setSelectedValue(value);\n        setDefaultValue(value === 'yes' ? options[0].id : options[1].id);\n      }\n\n    });\n  }, [fieldName, inputRef, registerField, options]);\n  useEffect(() => {\n    setIsErrored(!!error);\n  }, [error]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: name,\n    ref: inputRef,\n    value: selectedValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(RadioGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, options.map(option => /*#__PURE__*/React.createElement(\"div\", {\n    key: option.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: option.id,\n    name: `option-${name}`,\n    value: option.value,\n    onChange: e => {\n      setSelectedValue(e.target.value);\n      setDefaultValue(option.id);\n      change && change(e.target.value);\n    },\n    checked: defaultValue === option.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: option.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, option.label)))), isErrored && error && /*#__PURE__*/React.createElement(Error, {\n    title: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    color: \"#f44336\",\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default RadioInput;","map":{"version":3,"sources":["/home/ondaniel/santiago/sisgie-frontend/src/components/RadioInput/index.tsx"],"names":["React","useEffect","useRef","useState","FiAlertCircle","useField","Container","RadioGroup","Error","RadioInput","name","label","options","change","inputRef","fieldName","error","registerField","selectedValue","setSelectedValue","defaultOption","find","option","default","value","defaultValue","setDefaultValue","id","isErrored","setIsErrored","ref","current","path","setValue","_","map","e","target"],"mappings":"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","sourcesContent":["import React, { InputHTMLAttributes, useEffect, useRef, useState } from 'react';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, RadioGroup, Error } from './styles';\n\ninterface IRadioOption {\n  id: string;\n  label: string;\n  value: string;\n  default?: boolean;\n}\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  label: string;\n  options: IRadioOption[];\n  change?(value: string): void;\n}\n\nconst RadioInput: React.FC<InputProps> = ({ name, label, options, change }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const { fieldName, error, registerField } = useField(name);\n\n  const [selectedValue, setSelectedValue] = useState(() => {\n    const defaultOption = options.find(option => option.default);\n    return defaultOption ? defaultOption.value : '';\n  });\n  const [defaultValue, setDefaultValue] = useState(() => {\n    const defaultOption = options.find(option => option.default);\n    return defaultOption ? defaultOption.id : '';\n  });\n  const [isErrored, setIsErrored] = useState(false);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n      setValue(_: HTMLInputElement, value: 'yes' | 'no') {\n        setSelectedValue(value);\n        setDefaultValue(value === 'yes' ? options[0].id : options[1].id);\n      },\n    });\n  }, [fieldName, inputRef, registerField, options]);\n\n  useEffect(() => {\n    setIsErrored(!!error);\n  }, [error]);\n\n  return (\n    <Container>\n      <input type=\"hidden\" name={name} ref={inputRef} value={selectedValue} />\n      <span>{label}</span>\n      <RadioGroup>\n        {options.map(option => (\n          <div key={option.id}>\n            <input\n              type=\"radio\"\n              id={option.id}\n              name={`option-${name}`}\n              value={option.value}\n              onChange={e => {\n                setSelectedValue(e.target.value);\n                setDefaultValue(option.id);\n                change && change(e.target.value);\n              }}\n              checked={defaultValue === option.id}\n            />\n            <label htmlFor={option.id}>{option.label}</label>\n          </div>\n        ))}\n      </RadioGroup>\n      {isErrored && error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#f44336\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default RadioInput;\n"]},"metadata":{},"sourceType":"module"}