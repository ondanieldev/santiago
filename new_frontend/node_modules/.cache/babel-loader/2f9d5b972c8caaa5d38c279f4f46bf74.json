{"ast":null,"code":"var _jsxFileName = \"/home/ondaniel/santiago/main/new_frontend/src/components/Select/index.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { useField } from '@unform/core';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { Container, Error } from './styles';\n\nconst Select = ({\n  children,\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const selectRef = useRef(null);\n  const {\n    fieldName,\n    error,\n    registerField,\n    defaultValue\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      path: 'value'\n    });\n  }, [fieldName, selectRef, registerField]);\n  return /*#__PURE__*/React.createElement(Container, {\n    isErrored: !!error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", Object.assign({\n    defaultValue: defaultValue,\n    name: name,\n    ref: selectRef\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), children), error && /*#__PURE__*/React.createElement(Error, {\n    title: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    color: \"#f44336\",\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Select;","map":{"version":3,"sources":["/home/ondaniel/santiago/main/new_frontend/src/components/Select/index.tsx"],"names":["React","useEffect","useRef","useField","FiAlertCircle","Container","Error","Select","children","name","icon","Icon","rest","selectRef","fieldName","error","registerField","defaultValue","ref","current","path"],"mappings":";AAAA,OAAOA,KAAP,IAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,UAAjC;;AAOA,MAAMC,MAA6B,GAAG,CAAC;AACrCC,EAAAA,QADqC;AAErCC,EAAAA,IAFqC;AAGrCC,EAAAA,IAAI,EAAEC,IAH+B;AAIrC,KAAGC;AAJkC,CAAD,KAKhC;AACJ,QAAMC,SAAS,GAAGX,MAAM,CAAoB,IAApB,CAAxB;AACA,QAAM;AAAEY,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,aAApB;AAAmCC,IAAAA;AAAnC,MAAoDd,QAAQ,CAACM,IAAD,CAAlE;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,aAAa,CAAC;AACZP,MAAAA,IAAI,EAAEK,SADM;AAEZI,MAAAA,GAAG,EAAEL,SAAS,CAACM,OAFH;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACN,SAAD,EAAYD,SAAZ,EAAuBG,aAAvB,CANM,CAAT;AAQA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAE,CAAC,CAACD,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,eAEE;AAAQ,IAAA,YAAY,EAAEM,YAAtB;AAAoC,IAAA,IAAI,EAAER,IAA1C;AAAgD,IAAA,GAAG,EAAEI;AAArD,KAAoED,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,QADH,CAFF,EAKGO,KAAK,iBACJ,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,SAArB;AAA+B,IAAA,IAAI,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANJ,CADF;AAaD,CA9BD;;AAgCA,eAAeR,MAAf","sourcesContent":["import React, { SelectHTMLAttributes, useEffect, useRef } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\nimport { FiAlertCircle } from 'react-icons/fi';\n\nimport { Container, Error } from './styles';\n\ninterface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Select: React.FC<SelectProps> = ({\n  children,\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const selectRef = useRef<HTMLSelectElement>(null);\n  const { fieldName, error, registerField, defaultValue } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      path: 'value',\n    });\n  }, [fieldName, selectRef, registerField]);\n\n  return (\n    <Container isErrored={!!error}>\n      {Icon && <Icon size={20} />}\n      <select defaultValue={defaultValue} name={name} ref={selectRef} {...rest}>\n        {children}\n      </select>\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#f44336\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}